// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using librarian.API;

namespace librarian.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("librarian.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoSrc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2020, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Nulla congue"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2019, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Etiam maximus"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2016, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Integer dapibus"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2020, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Aliquam nec"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2015, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Praesent luctus"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2018, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Nam porttitor"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sed placerat"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2020, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "In maximus"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Jan Kowalski",
                            PageCount = 0,
                            PhotoSrc = "",
                            ReleaseDate = new DateTime(2020, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Nullam ac"
                        });
                });

            modelBuilder.Entity("librarian.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("librarian.API.Models.UserBook", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("UserBooks");
                });

            modelBuilder.Entity("librarian.API.Models.UserBook", b =>
                {
                    b.HasOne("librarian.API.Models.Book", "Book")
                        .WithMany("UserBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("librarian.API.Models.User", "User")
                        .WithMany("UserBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("librarian.API.Models.Book", b =>
                {
                    b.Navigation("UserBooks");
                });

            modelBuilder.Entity("librarian.API.Models.User", b =>
                {
                    b.Navigation("UserBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
